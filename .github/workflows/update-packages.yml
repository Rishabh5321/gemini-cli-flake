name: update-packages
on:
  schedule:
    - cron: "0 */6 * * *"
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-nightly:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2

      # Generate a GitHub App token for creating the PR
      - name: Generate App Token
        id: generate_token_nightly
        uses: peter-murray/workflow-application-token-action@v4
        with:
          application_id: ${{ secrets.APP_ID }}
          application_private_key: ${{ secrets.APP_PRIVATE_KEY }}

      # Configure Git for FlakeBuilderApp
      - name: Configure Git for FlakeBuilderApp
        run: |
          git config --global user.email "flakebuilderapp[bot]@users.noreply.github.com"
          git config --global user.name "flakebuilderapp[bot]"
          echo "Git user configured: $(git config --global user.name) <$(git config --global user.email)>"

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            auto-optimise-store = true
            experimental-features = nix-command flakes
            max-jobs = auto
            download-buffer-size = 500000000

      - name: Update nightly package manually
        id: update_nightly_package
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          CURRENT_VERSION=$(grep -oP 'version = "\K[0-9.]+-nightly\.[0-9]+\.[0-9a-f]+' pkgs/nightly/package.nix)
          echo "Current nightly version: $CURRENT_VERSION"

          # Find the latest nightly release tag
          # This assumes nightly releases have a tag like vX.Y.Z-nightly.YYYYMMDD.commit_hash
          LATEST_NIGHTLY_TAG=$(gh release list -R google-gemini/gemini-cli --limit 100 --json tagName | jq -r '.[] | select(.tagName | contains("nightly")) | .tagName' | head -n 1)

          if [ -z "$LATEST_NIGHTLY_TAG" ]; then
            echo "No nightly releases found."
            exit 0
          fi

          LATEST_NIGHTLY_VERSION=$(echo "$LATEST_NIGHTLY_TAG" | sed 's/^v//') # Remove 'v' prefix

          echo "Latest nightly release tag: $LATEST_NIGHTLY_TAG"
          echo "Latest nightly version: $LATEST_NIGHTLY_VERSION"

          if [ "$CURRENT_VERSION" != "$LATEST_NIGHTLY_VERSION" ]; then
            echo "New nightly release available. Updating..."
            # Construct the URL for gemini.js
            DOWNLOAD_URL="https://github.com/google-gemini/gemini-cli/releases/download/${LATEST_NIGHTLY_TAG}/gemini.js"
            echo "Downloading from: $DOWNLOAD_URL"

            # Download the file and calculate the hash
            TEMP_FILE=$(mktemp)
            curl -L -o "$TEMP_FILE" "$DOWNLOAD_URL"
            NEW_HASH=$(nix hash file --sri "$TEMP_FILE")
            rm "$TEMP_FILE"

            echo "New version: $LATEST_NIGHTLY_VERSION"
            echo "New hash: $NEW_HASH"

            # Update pkgs/nightly/package.nix
            sed -i -E "s/^( *version *= *).*$/\1\"${LATEST_NIGHTLY_VERSION}\";/" pkgs/nightly/package.nix
            sed -i -E "s/^( *hash *= *).*$/\1\"${NEW_HASH}\";/" pkgs/nightly/package.nix
            echo "UPDATE_NEEDED=true" >> $GITHUB_OUTPUT
          else
            echo "No new nightly release available or current version is newer."
          fi

      - name: Check for changes
        id: git_status_nightly
        run: |
          git diff --exit-code || echo "UPDATE_NEEDED=true" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        id: create_pr_nightly
        if: steps.git_status_nightly.outputs.UPDATE_NEEDED == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ steps.generate_token_nightly.outputs.token }}
          author: "flakebuilderapp[bot] <flakebuilderapp[bot]@users.noreply.github.com>"
          committer: "flakebuilderapp[bot] <flakebuilderapp[bot]@users.noreply.github.com>"
          labels: automated, nightly-update
          delete-branch: true
          commit-message: "feat: Update gemini-cli-nightly flake input"
          title: "feat: Automated update for gemini-cli-nightly"
          body: |
            This PR automatically updates the `gemini-cli-nightly` flake input to its latest version.

            Changes generated by GitHub Actions workflow.
          branch: "nightly-update"
          base: main

      - name: Set the PR to automerge
        if: ${{ steps.create_pr_nightly.outputs.pull-request-operation == 'created' }}
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ steps.generate_token_nightly.outputs.token }}
          pull-request-number: ${{ steps.create_pr_nightly.outputs.pull-request-number }}
          merge-method: "squash"

  update-stable:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2

      # Generate a GitHub App token for creating the PR
      - name: Generate App Token
        id: generate_token_stable
        uses: peter-murray/workflow-application-token-action@v4
        with:
          application_id: ${{ secrets.APP_ID }}
          application_private_key: ${{ secrets.APP_PRIVATE_KEY }}

      # Configure Git for FlakeBuilderApp
      - name: Configure Git for FlakeBuilderApp
        run: |
          git config --global user.email "flakebuilderapp[bot]@users.noreply.github.com"
          git config --global user.name "flakebuilderapp[bot]"
          echo "Git user configured: $(git config --global user.name) <$(git config --global user.email)>"

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            auto-optimise-store = true
            experimental-features = nix-command flakes
            max-jobs = auto
            download-buffer-size = 500000000

      - name: Update stable package manually
        id: update_stable_package
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          CURRENT_VERSION=$(grep -oP 'version = "\K[0-9.]+' pkgs/stable/package.nix)
          echo "Current stable version: $CURRENT_VERSION"

          # Find the latest stable release tag
          LATEST_STABLE_TAG=$(gh release view --json tagName --jq .tagName -R google-gemini/gemini-cli | sed 's/^v//')

          if [ -z "$LATEST_STABLE_TAG" ]; then
            echo "No stable releases found."
            exit 0
          fi

          LATEST_STABLE_VERSION=$(echo "$LATEST_STABLE_TAG" | sed 's/^v//') # Remove 'v' prefix

          echo "Latest stable release tag: $LATEST_STABLE_TAG"
          echo "Latest stable version: $LATEST_STABLE_VERSION"

          if [ "$CURRENT_VERSION" != "$LATEST_STABLE_VERSION" ]; then
            echo "New stable release available. Updating..."
            # Construct the URL for gemini.js
            DOWNLOAD_URL="https://github.com/google-gemini/gemini-cli/releases/download/v${LATEST_STABLE_TAG}/gemini.js"
            echo "Downloading from: $DOWNLOAD_URL"

            # Download the file and calculate the hash
            TEMP_FILE=$(mktemp)
            curl -L -o "$TEMP_FILE" "$DOWNLOAD_URL"
            NEW_HASH=$(nix hash file --sri "$TEMP_FILE")
            rm "$TEMP_FILE"

            echo "New version: $LATEST_STABLE_VERSION"
            echo "New hash: $NEW_HASH"

            # Update pkgs/stable/package.nix
            sed -i -E "s/^( *version *= *).*$/\1"${LATEST_STABLE_VERSION}";/" pkgs/stable/package.nix
            sed -i -E "s/^( *hash *= *).*$/\1"${NEW_HASH}";/" pkgs/stable/package.nix
            echo "UPDATE_NEEDED=true" >> $GITHUB_OUTPUT
          else
            echo "No new stable release available or current version is newer."
          fi

      - name: Check for changes
        id: git_status_stable
        run: |
          git diff --exit-code || echo "UPDATE_NEEDED=true" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        id: create_pr_stable
        if: steps.git_status_stable.outputs.UPDATE_NEEDED == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ steps.generate_token_stable.outputs.token }}
          author: "flakebuilderapp[bot] <flakebuilderapp[bot]@users.noreply.github.com>"
          committer: "flakebuilderapp[bot] <flakebuilderapp[bot]@users.noreply.github.com>"
          labels: automated, stable-update
          delete-branch: true
          commit-message: "feat: Update gemini-cli-stable flake input"
          title: "feat: Automated update for gemini-cli-stable"
          body: |
            This PR automatically updates the `gemini-cli-stable` flake input to its latest version.

            Changes generated by GitHub Actions workflow.
          branch: "stable-update"
          base: main

      - name: Set the PR to automerge
        if: ${{ steps.create_pr_stable.outputs.pull-request-operation == 'created' }}
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ steps.generate_token_stable.outputs.token }}
          pull-request-number: ${{ steps.create_pr_stable.outputs.pull-request-number }}
          merge-method: "squash"
